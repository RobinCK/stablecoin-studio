/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
  BytesLike,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  HederaERC20Proxy,
  HederaERC20ProxyInterface,
} from "../../contracts/HederaERC20Proxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_logic",
        type: "address",
      },
      {
        internalType: "address",
        name: "admin_",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "admin_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "changeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "implementation_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405260405162000f3238038062000f32833981016040819052620000269162000496565b8282828281620000398282600062000053565b506200004790508262000090565b505050505050620005c9565b6200005e83620000eb565b6000825111806200006c5750805b156200008b576200008983836200012d60201b6200029a1760201c565b505b505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f620000bb6200015c565b604080516001600160a01b03928316815291841660208301520160405180910390a1620000e88162000195565b50565b620000f6816200024a565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b606062000155838360405180606001604052806027815260200162000f0b60279139620002fe565b9392505050565b60006200018660008051602062000eeb83398151915260001b620003e460201b620002381760201c565b546001600160a01b0316919050565b6001600160a01b038116620002005760405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b806200022960008051602062000eeb83398151915260001b620003e460201b620002381760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b6200026081620003e760201b620002c61760201c565b620002c45760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401620001f7565b80620002297f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b620003e460201b620002381760201c565b60606001600160a01b0384163b620003685760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401620001f7565b600080856001600160a01b03168560405162000385919062000576565b600060405180830381855af49150503d8060008114620003c2576040519150601f19603f3d011682016040523d82523d6000602084013e620003c7565b606091505b509092509050620003da828286620003f6565b9695505050505050565b90565b6001600160a01b03163b151590565b606083156200040757508162000155565b825115620004185782518084602001fd5b8160405162461bcd60e51b8152600401620001f7919062000594565b80516001600160a01b03811681146200044c57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620004845781810151838201526020016200046a565b83811115620000895750506000910152565b600080600060608486031215620004ac57600080fd5b620004b78462000434565b9250620004c76020850162000434565b60408501519092506001600160401b0380821115620004e557600080fd5b818601915086601f830112620004fa57600080fd5b8151818111156200050f576200050f62000451565b604051601f8201601f19908116603f011681019083821181831017156200053a576200053a62000451565b816040528281528960208487010111156200055457600080fd5b6200056783602083016020880162000467565b80955050505050509250925092565b600082516200058a81846020870162000467565b9190910192915050565b6020815260008251806020840152620005b581604085016020870162000467565b601f01601f19169190910160400192915050565b61091280620005d96000396000f3fe6080604052600436106100695760003560e01c80638f283970116100435780638f283970146100e4578063aaf10f4214610104578063f851a4401461011957610078565b80633659cfe6146100805780634f1ef286146100a05780635c60da1b146100b357610078565b366100785761007661012e565b005b61007661012e565b34801561008c57600080fd5b5061007661009b36600461079c565b610148565b6100766100ae3660046107b7565b61018f565b3480156100bf57600080fd5b506100c8610200565b6040516001600160a01b03909116815260200160405180910390f35b3480156100f057600080fd5b506100766100ff36600461079c565b61023b565b34801561011057600080fd5b506100c8610265565b34801561012557600080fd5b506100c861026f565b6101366102d5565b61014661014161038f565b610399565b565b6101506103bd565b6001600160a01b0316336001600160a01b0316141561018757610184816040518060200160405280600081525060006103f0565b50565b61018461012e565b6101976103bd565b6001600160a01b0316336001600160a01b031614156101f8576101f38383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250600192506103f0915050565b505050565b6101f361012e565b600061020a6103bd565b6001600160a01b0316336001600160a01b031614156102305761022b61038f565b905090565b61023861012e565b90565b6102436103bd565b6001600160a01b0316336001600160a01b03161415610187576101848161041b565b600061022b61038f565b60006102796103bd565b6001600160a01b0316336001600160a01b031614156102305761022b6103bd565b60606102bf83836040518060600160405280602781526020016108b66027913961046f565b9392505050565b6001600160a01b03163b151590565b6102dd6103bd565b6001600160a01b0316336001600160a01b031614156101465760405162461bcd60e51b815260206004820152604260248201527f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60448201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f7879207461726760648201527f6574000000000000000000000000000000000000000000000000000000000000608482015260a4015b60405180910390fd5b600061022b610563565b3660008037600080366000845af43d6000803e8080156103b8573d6000f35b3d6000fd5b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b546001600160a01b0316919050565b6103f98361058b565b6000825111806104065750805b156101f357610415838361029a565b50505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6104446103bd565b604080516001600160a01b03928316815291841660208301520160405180910390a1610184816105cb565b60606001600160a01b0384163b6104ee5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e747261637400000000000000000000000000000000000000000000000000006064820152608401610386565b600080856001600160a01b0316856040516105099190610866565b600060405180830381855af49150503d8060008114610544576040519150601f19603f3d011682016040523d82523d6000602084013e610549565b606091505b50915091506105598282866106a3565b9695505050505050565b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc6103e1565b610594816106dc565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6001600160a01b0381166106475760405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610386565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b039290921691909117905550565b606083156106b25750816102bf565b8251156106c25782518084602001fd5b8160405162461bcd60e51b81526004016103869190610882565b6001600160a01b0381163b6107595760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152608401610386565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc61066a565b80356001600160a01b038116811461079757600080fd5b919050565b6000602082840312156107ae57600080fd5b6102bf82610780565b6000806000604084860312156107cc57600080fd5b6107d584610780565b9250602084013567ffffffffffffffff808211156107f257600080fd5b818601915086601f83011261080657600080fd5b81358181111561081557600080fd5b87602082850101111561082757600080fd5b6020830194508093505050509250925092565b60005b8381101561085557818101518382015260200161083d565b838111156104155750506000910152565b6000825161087881846020870161083a565b9190910192915050565b60208152600082518060208401526108a181604085016020870161083a565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220c719a8fdf9b838d17e7c45127c2e94b0d835cfce25851d795c072b5174f8e0b764736f6c634300080a0033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564";

type HederaERC20ProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HederaERC20ProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HederaERC20Proxy__factory extends ContractFactory {
  constructor(...args: HederaERC20ProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _logic: PromiseOrValue<string>,
    admin_: PromiseOrValue<string>,
    _data: PromiseOrValue<BytesLike>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<HederaERC20Proxy> {
    return super.deploy(
      _logic,
      admin_,
      _data,
      overrides || {}
    ) as Promise<HederaERC20Proxy>;
  }
  override getDeployTransaction(
    _logic: PromiseOrValue<string>,
    admin_: PromiseOrValue<string>,
    _data: PromiseOrValue<BytesLike>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_logic, admin_, _data, overrides || {});
  }
  override attach(address: string): HederaERC20Proxy {
    return super.attach(address) as HederaERC20Proxy;
  }
  override connect(signer: Signer): HederaERC20Proxy__factory {
    return super.connect(signer) as HederaERC20Proxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HederaERC20ProxyInterface {
    return new utils.Interface(_abi) as HederaERC20ProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HederaERC20Proxy {
    return new Contract(address, _abi, signerOrProvider) as HederaERC20Proxy;
  }
}
