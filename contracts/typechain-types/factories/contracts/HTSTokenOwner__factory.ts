/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  HTSTokenOwner,
  HTSTokenOwnerInterface,
} from "../../contracts/HTSTokenOwner";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "delegateTransferFrom",
    outputs: [
      {
        internalType: "int64",
        name: "responseCode",
        type: "int64",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "serialNumber",
        type: "uint256",
      },
    ],
    name: "delegateTransferFromNFT",
    outputs: [
      {
        internalType: "int64",
        name: "responseCode",
        type: "int64",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20address",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "freeze",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mintToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "pause",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "remove",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc20address",
        type: "address",
      },
    ],
    name: "setERC20Address",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "tranferContract",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "int64",
        name: "responseCode",
        type: "int64",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "serialNumber",
        type: "uint256",
      },
    ],
    name: "transferFromNFT",
    outputs: [
      {
        internalType: "int64",
        name: "responseCode",
        type: "int64",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "unfreeze",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "unpause",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "amount",
        type: "uint32",
      },
    ],
    name: "wipeToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061121c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100e05760003560e01c806376a67a511161008757806376a67a51146101b457806379c65068146101c75780639b23d3d9146101da578063d1df306c146101ed578063d4e2b89614610200578063e192545a14610213578063eac6f3fe14610226578063f18d03cc1461023957600080fd5b806311e1fc07146100e5578063157482501461011057806315dacbea1461013357806329092d0e1461014657806341bec0d21461015957806357b001f91461016e5780635adb6ddb146101815780636a83b7e914610194575b600080fd5b6100f86100f3366004610d3e565b61024c565b60405160079190910b81526020015b60405180910390f35b61012361011e366004610d89565b61032d565b6040519015158152602001610107565b6100f8610141366004610d3e565b610383565b610123610154366004610dbc565b61042e565b61016c610167366004610dbc565b610478565b005b61012361017c366004610dbc565b6104f3565b61012361018f366004610d89565b610529565b6000546101a7906001600160a01b031681565b6040516101079190610dde565b6101236101c2366004610dbc565b610560565b6101236101d5366004610df2565b610596565b6100f86101e8366004610d3e565b610607565b6101236101fb366004610df2565b610637565b61012361020e366004610e1c565b61068b565b610123610221366004610e6c565b6106d7565b6100f8610234366004610d3e565b610710565b610123610247366004610d3e565b610740565b60008060006101676001600160a01b0316639b23d3d960e01b8888888860405160240161027c9493929190610ea8565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516102ba9190610f02565b600060405180830381855af49150503d80600081146102f5576040519150601f19603f3d011682016040523d82523d6000602084013e6102fa565b606091505b50915091508161030b57601561031f565b8080602001905181019061031f9190610f30565b60030b979650505050505050565b600080546001600160a01b031633146103615760405162461bcd60e51b815260040161035890610f4b565b60405180910390fd5b600061036d848461078e565b60070b905061037b81610871565b949350505050565b60008060006101676001600160a01b03166315dacbea60e01b888888886040516024016103b39493929190610ea8565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516103f19190610f02565b6000604051808303816000865af19150503d80600081146102f5576040519150601f19603f3d011682016040523d82523d6000602084013e6102fa565b600080546001600160a01b031633146104595760405162461bcd60e51b815260040161035890610f4b565b6000610464836108b3565b905061046f81610871565b9150505b919050565b6000546001600160a01b0316156104d15760405162461bcd60e51b815260206004820152601d60248201527f4552433230206164647265737320616c726561647920646566696e65640000006044820152606401610358565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b600080546001600160a01b0316331461051e5760405162461bcd60e51b815260040161035890610f4b565b60006104648361098d565b600080546001600160a01b031633146105545760405162461bcd60e51b815260040161035890610f4b565b600061036d84846109b7565b600080546001600160a01b0316331461058b5760405162461bcd60e51b815260040161035890610f4b565b6000610464836109ed565b600080546001600160a01b031633146105c15760405162461bcd60e51b815260040161035890610f4b565b604080516000808252602082019092526105fa9085908590846105f4565b60608152602001906001900390816105df5790505b50610a17565b5050905061037b81610871565b60008060006101676001600160a01b0316639b23d3d960e01b888888886040516024016103b39493929190610ea8565b600080546001600160a01b031633146106625760405162461bcd60e51b815260040161035890610f4b565b6040805160008082526020820190925261067f9085908590610b15565b50905061037b81610871565b600080546001600160a01b031633146106b65760405162461bcd60e51b815260040161035890610f4b565b60006106c3858585610bfe565b90506106ce81610871565b95945050505050565b600080546001600160a01b031633146107025760405162461bcd60e51b815260040161035890610f4b565b60006106c385308686610cdf565b60008060006101676001600160a01b03166315dacbea60e01b8888888860405160240161027c9493929190610ea8565b600080546001600160a01b0316331461076b5760405162461bcd60e51b815260040161035890610f4b565b600061077986868686610cdf565b905061078481610871565b9695505050505050565b6040516001600160a01b0383811660248301528216604482015260009081908190610167906316e3e16160e21b906064015b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516107fe9190610f02565b6000604051808303816000865af19150503d806000811461083b576040519150601f19603f3d011682016040523d82523d6000602084013e610840565b606091505b509150915081610851576015610865565b808060200190518101906108659190610f30565b60030b95945050505050565b6000601682146108ab5760405162461bcd60e51b815260206004820152600560248201526422b93937b960d91b6044820152606401610358565b506001919050565b60008060006101676001600160a01b031663f069f71260e01b856040516024016108dd9190610dde565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905161091b9190610f02565b6000604051808303816000865af19150503d8060008114610958576040519150601f19603f3d011682016040523d82523d6000602084013e61095d565b606091505b50915091508161096e576015610982565b808060200190518101906109829190610f30565b60030b949350505050565b60008060006101676001600160a01b0316633b3bff0f60e01b856040516024016108dd9190610dde565b6040516001600160a01b0383811660248301528216604482015260009081908190610167906352f9138760e01b906064016107c0565b60008060006101676001600160a01b0316637c41ad2c60e01b856040516024016108dd9190610dde565b60008060606000806101676001600160a01b031663278e0b8860e01b898989604051602401610a4893929190610fa3565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051610a869190610f02565b6000604051808303816000865af19150503d8060008114610ac3576040519150601f19603f3d011682016040523d82523d6000602084013e610ac8565b606091505b509150915081610aeb576040805160008082526020820190925260159190610aff565b80806020019051810190610aff9190611068565b60039290920b9a90995090975095505050505050565b6000806000806101676001600160a01b031663acb9cff960e01b888888604051602401610b4493929190611150565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051610b829190610f02565b6000604051808303816000865af19150503d8060008114610bbf576040519150601f19603f3d011682016040523d82523d6000602084013e610bc4565b606091505b509150915081610bd75760156000610beb565b80806020019051810190610beb91906111bc565b60039190910b9890975095505050505050565b604080516001600160a01b0385811660248301528416604482015263ffffffff831660648083019190915282518083039091018152608490910182526020810180516001600160e01b0316639790686d60e01b17905290516000918291829161016791610c6b9190610f02565b6000604051808303816000865af19150503d8060008114610ca8576040519150601f19603f3d011682016040523d82523d6000602084013e610cad565b606091505b509150915081610cbe576015610cd2565b80806020019051810190610cd29190610f30565b60030b9695505050505050565b6040516001600160a01b038581166024830152848116604483015283166064820152600782900b6084820152600090819081906101679063eca3691760e01b9060a4016103b3565b80356001600160a01b038116811461047357600080fd5b60008060008060808587031215610d5457600080fd5b610d5d85610d27565b9350610d6b60208601610d27565b9250610d7960408601610d27565b9396929550929360600135925050565b60008060408385031215610d9c57600080fd5b610da583610d27565b9150610db360208401610d27565b90509250929050565b600060208284031215610dce57600080fd5b610dd782610d27565b9392505050565b6001600160a01b0391909116815260200190565b60008060408385031215610e0557600080fd5b610e0e83610d27565b946020939093013593505050565b600080600060608486031215610e3157600080fd5b610e3a84610d27565b9250610e4860208501610d27565b9150604084013563ffffffff81168114610e6157600080fd5b809150509250925092565b600080600060608486031215610e8157600080fd5b610e8a84610d27565b9250610e9860208501610d27565b9150604084013590509250925092565b6001600160a01b039485168152928416602084015292166040820152606081019190915260800190565b60005b83811015610eed578181015183820152602001610ed5565b83811115610efc576000848401525b50505050565b60008251610f14818460208701610ed2565b9190910192915050565b8051600381900b811461047357600080fd5b600060208284031215610f4257600080fd5b610dd782610f1e565b60208082526022908201527f43616c6c6572206973206e6f7420486564657261455243323020636f6e74726160408201526118dd60f21b606082015260800190565b634e487b7160e01b600052604160045260246000fd5b60006060820160018060a01b0386168352602067ffffffffffffffff8616818501526060604085015281855180845260808601915060808160051b870101935082870160005b8281101561102f57878603607f190184528151805180885261101081888a01898501610ed2565b601f01601f191696909601850195509284019290840190600101610fe9565b50939998505050505050505050565b805167ffffffffffffffff8116811461047357600080fd5b8051600781900b811461047357600080fd5b60008060006060848603121561107d57600080fd5b61108684610f1e565b9250602061109581860161103e565b9250604085015167ffffffffffffffff808211156110b257600080fd5b818701915087601f8301126110c657600080fd5b8151818111156110d8576110d8610f8d565b8060051b604051601f19603f830116810181811085821117156110fd576110fd610f8d565b60405291825284820192508381018501918a83111561111b57600080fd5b938501935b828510156111405761113185611056565b84529385019392850192611120565b8096505050505050509250925092565b6001600160a01b038416815267ffffffffffffffff83166020808301919091526060604083018190528351908301819052600091848101916080850190845b818110156111ae57845160070b8352938301939183019160010161118f565b509098975050505050505050565b600080604083850312156111cf57600080fd5b6111d883610f1e565b9150610db36020840161103e56fea2646970667358221220bc5989abb9f636c9591a40ee39a725329af864aee1d313ee5696b262a336689d64736f6c634300080a0033";

type HTSTokenOwnerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HTSTokenOwnerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HTSTokenOwner__factory extends ContractFactory {
  constructor(...args: HTSTokenOwnerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<HTSTokenOwner> {
    return super.deploy(overrides || {}) as Promise<HTSTokenOwner>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): HTSTokenOwner {
    return super.attach(address) as HTSTokenOwner;
  }
  override connect(signer: Signer): HTSTokenOwner__factory {
    return super.connect(signer) as HTSTokenOwner__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HTSTokenOwnerInterface {
    return new utils.Interface(_abi) as HTSTokenOwnerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HTSTokenOwner {
    return new Contract(address, _abi, signerOrProvider) as HTSTokenOwner;
  }
}
