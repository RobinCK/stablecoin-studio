service: accelerator-defenders
configValidationMode: error
frameworkVersion: '3'

custom:
  config: ${file(./config.json)}

provider:
  name: defender
  stage: ${opt:stage, 'dev'}
  stackName: acceleratorStack
  ssot: false
  
defender:
  key: ${self:custom.config.API_KEY}
  secret: ${self:custom.config.API_SECRET}
  
functions:
  accelerator-new-stable-coin:
    name: Accelerator New StableCoin
    trigger:
      type: sentinel
    paused: false
    path: './autotasks/add-SCs'
    
resources:
  Resources:
    notifications:
      alberto:
        type: email
        name: EMAIL-NOTIFICATION
        config:
          emails:
            - ${self:custom.config.EMAIL}
        paused: true
    categories:
      high-severity:
        name: High Severity
        description: A default category to be assigned for high risk monitors.
      medium-severity:
        name: Medium Severity
        description: A default category to be assigned for medium risk monitors.
      low-severity:
        name: Low Severity
        description: A default category to be assigned for low risk monitors.
    sentinels:
      stable-coin-accelerator-stable-coins:
        name: StableCoin Accelerator StableCoins
        type: BLOCK
        network: hederatest
        addresses:
          - '0x047105ABe2026D81f5a987bD4d6d1f060da883e9'
        paused: false
        confirm-level: 1
        notify-config:
          timeout: 0
          message: |-
            **Defender Sentinel {{ sentinel.name }} Triggered**

            **Network**

            {{ sentinel.network }}

            **Block Hash**

            {{ blockHash }}

            **Transaction Hash**

            {{ transaction.transactionHash }}

            **Explorer Link**

            {{ transaction.link }}

            {{ matchReasonsFormatted }}
          message-subject: 'Defender Sentinel: StableCoin Accelerator StableCoins triggered'
          channels:
            - ${self:resources.Resources.notifications.alberto}
        conditions:
          event:
            - expression: null
              signature: GrantTokenKyc(address,address)
            - expression: null
              signature: HBARRescued(address,uint256)
            - expression: null
              signature: MetadataSet(address,string)
            - expression: null
              signature: ReserveAddressChanged(address,address)
            - expression: null
              signature: RevokeTokenKyc(address,address)
            - expression: null
              signature: RoleGranted(bytes32,address,address)
            - expression: null
              signature: RoleRevoked(bytes32,address,address)
            - expression: null
              signature: >-
                SupplierAllowanceDecreased(address,address,uint256,uint256,uint256)
            - expression: null
              signature: >-
                SupplierAllowanceIncreased(address,address,uint256,uint256,uint256)
            - expression: null
              signature: SupplierAllowanceReset(address,address,uint256,uint256)
            - expression: null
              signature: TokenDeleted(address)
            - expression: null
              signature: TokenPaused(address)
            - expression: null
              signature: TokenRescued(address,address,int64)
            - expression: null
              signature: TokenTransfer(address,address,address,int64)
            - expression: null
              signature: TokenUnpaused(address)
            - expression: null
              signature: >-
                TokenUpdated(address,(string,string,(uint256,bytes,bool)[],int64,int64,string))
            - expression: null
              signature: TokensBurned(address,address,int64)
            - expression: null
              signature: TokensMinted(address,address,int64,address)
            - expression: null
              signature: TokensWiped(address,address,address,int64)
            - expression: null
              signature: TransfersFrozen(address,address)
            - expression: null
              signature: TransfersUnfrozen(address,address)
      stable-coin-accelerator-factory:
        name: StableCoin Accelerator Factory
        type: BLOCK
        network: hederatest
        addresses:
          - ${self:custom.config.FACTORY_ID}
        paused: false
        autotask-trigger: ${self:functions.accelerator-new-stable-coin}
        confirm-level: 1
        notify-config:
          timeout: 1000
          message: |-
            **Defender Sentinel {{ sentinel.name }} Triggered**

            **Network**

            {{ sentinel.network }}

            **Block Hash**

            {{ blockHash }}

            **Transaction Hash**

            {{ transaction.transactionHash }}

            **Explorer Link**

            {{ transaction.link }}

            {{ matchReasonsFormatted }}
          message-subject: 'Defender Sentinel: StableCoin Accelerator Factory triggered'
          channels:
            - ${self:resources.Resources.notifications.alberto}
        conditions:
          event:
            - expression: null
              signature: AdminChanged(address,address)
            - expression: null
              signature: Deployed((address,address,address,address,address,address))
            - expression: null
              signature: HederaTokenManagerAddressAdded(address)
            - expression: null
              signature: HederaTokenManagerAddressEdited(address,address)
            - expression: null
              signature: HederaTokenManagerAddressRemoved(uint256,address)
              
plugins:
  - '@openzeppelin/defender-serverless'
